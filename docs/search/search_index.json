{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Methods for planning land conservation and restoration with geospatial tools. This is a work in progress\u2026","title":"Introduction"},{"location":"elevation/heatLoadIndex/","text":"Purpose The heatLoadIndex tool produces a heat load index layer from a DEM. Background Need discussion of climate change refugia. Reference this review article and this methods article . 1. Replicate script Atom>File>New File \u2018shadedRelief.py\u2019 into project folder. Copy script from methods repo . Paste script into \u2018shadedRelief.py\u2019. Save file. 2. Organize workspace Make a \u2018data\u2019 directory within your \u2018wbt_pySpace\u2019 directory (if you do not already have one). Copy the path to \u2018data\u2019 folder so you can set it as the working directory. wbt . work_dir = \"/Users/jhowarth/projects/GEOG0310/methods/wbt_pySpace/data\" Also check the name for your DEM (it may not be the same as below). dem = \"../testDEM/_02_testLidar.tif\" 3. Run script In Atom, packages>script>run script. (Short cut: Command-I on Mac or Control-I on Windows). 4. Inspect result In Q, add the layer to a project. 5. Style your layer In Q, change symbology to display layer with three classes that follow Theobald article.","title":"Heat load index"},{"location":"elevation/heatLoadIndex/#purpose","text":"The heatLoadIndex tool produces a heat load index layer from a DEM.","title":"Purpose"},{"location":"elevation/heatLoadIndex/#background","text":"Need discussion of climate change refugia. Reference this review article and this methods article .","title":"Background"},{"location":"elevation/heatLoadIndex/#1-replicate-script","text":"Atom>File>New File \u2018shadedRelief.py\u2019 into project folder. Copy script from methods repo . Paste script into \u2018shadedRelief.py\u2019. Save file.","title":"1. Replicate script"},{"location":"elevation/heatLoadIndex/#2-organize-workspace","text":"Make a \u2018data\u2019 directory within your \u2018wbt_pySpace\u2019 directory (if you do not already have one). Copy the path to \u2018data\u2019 folder so you can set it as the working directory. wbt . work_dir = \"/Users/jhowarth/projects/GEOG0310/methods/wbt_pySpace/data\" Also check the name for your DEM (it may not be the same as below). dem = \"../testDEM/_02_testLidar.tif\"","title":"2. Organize workspace"},{"location":"elevation/heatLoadIndex/#3-run-script","text":"In Atom, packages>script>run script. (Short cut: Command-I on Mac or Control-I on Windows).","title":"3. Run  script"},{"location":"elevation/heatLoadIndex/#4-inspect-result","text":"In Q, add the layer to a project.","title":"4. Inspect result"},{"location":"elevation/heatLoadIndex/#5-style-your-layer","text":"In Q, change symbology to display layer with three classes that follow Theobald article.","title":"5. Style your layer"},{"location":"elevation/lidarProcessing/","text":"Select tiles by extent Using extent of area and index of tiles, select tiles that intersect extent. Field calculator Create new field Name: imgPath Type: Text Length: 150 Expression: '/Volumes/LaCie/data/vtRasters/vtLidar' + right( \"DOWNLOAD_P\" , length( \"DOWNLOAD_P\" ) - 6) Field calculator Create new field Name: year Type: integer Length: 4 Expression: right(left( \"DOWNLOAD_P\" , 57),4) Export features Format: CSV File Name: lidarList.csv Encoding: UTF-8 Select fields: \u2018imgPath\u2019 only Geometry: \u2018no geometry\u2019 Open csv in text editor>remove first row (\u2018imgPath\u2019 field name) note: also need to sort list here so more recent files are on bottom of list. This will all Build virtual raster gdalbuildvrt -resolution average -r bilinear -allow_projection_difference -input_file_list '/Volumes/LaCie/projects/ocWetlands/lidarTileExtent/lidarList.csv' '/Volumes/LaCie/projects/ocWetlands/ocwElevation/ocwDEM.vrt' Translate raster gdal_translate -ot Float32 -of GTiff -r nearest '/Volumes/LaCie/projects/ocWetlands/ocwElevation/ocwDEM.vrt' '/Volumes/LaCie/projects/ocWetlands/ocwElevation/ocwDEM_mosaic.tif'","title":"lidarProcessing"},{"location":"elevation/lidarProcessing/#select-tiles-by-extent","text":"Using extent of area and index of tiles, select tiles that intersect extent. Field calculator Create new field Name: imgPath Type: Text Length: 150 Expression: '/Volumes/LaCie/data/vtRasters/vtLidar' + right( \"DOWNLOAD_P\" , length( \"DOWNLOAD_P\" ) - 6) Field calculator Create new field Name: year Type: integer Length: 4 Expression: right(left( \"DOWNLOAD_P\" , 57),4) Export features Format: CSV File Name: lidarList.csv Encoding: UTF-8 Select fields: \u2018imgPath\u2019 only Geometry: \u2018no geometry\u2019 Open csv in text editor>remove first row (\u2018imgPath\u2019 field name) note: also need to sort list here so more recent files are on bottom of list. This will all","title":"Select tiles by extent"},{"location":"elevation/lidarProcessing/#build-virtual-raster","text":"gdalbuildvrt -resolution average -r bilinear -allow_projection_difference -input_file_list '/Volumes/LaCie/projects/ocWetlands/lidarTileExtent/lidarList.csv' '/Volumes/LaCie/projects/ocWetlands/ocwElevation/ocwDEM.vrt'","title":"Build virtual raster"},{"location":"elevation/lidarProcessing/#translate-raster","text":"gdal_translate -ot Float32 -of GTiff -r nearest '/Volumes/LaCie/projects/ocWetlands/ocwElevation/ocwDEM.vrt' '/Volumes/LaCie/projects/ocWetlands/ocwElevation/ocwDEM_mosaic.tif'","title":"Translate raster"},{"location":"elevation/shadedRelief/","text":"Purpose The shadedRelief tool produces three layers that can be combined to make shaded relief maps. 1. Replicate script Atom>File>New File \u2018shadedRelief.py\u2019 into project folder. Copy script from methods repo . Paste script into \u2018shadedRelief.py\u2019. Save file. 2. Organize workspace Make a \u2018data\u2019 directory within your \u2018wbt_pySpace\u2019 directory (if you do not already have one). Copy the path to \u2018data\u2019 folder so you can set it as the working directory. wbt . work_dir = \"/Users/jhowarth/projects/GEOG0310/methods/wbt_pySpace/data\" Also check the name for your DEM (it may not be the same as below). dem = \"../testDEM/_02_testLidar.tif\" 3. Run script In Atom, packages>script>run script. (Short cut: Command-I on Mac or Control-I on Windows). 4. Inspect result In Q, create a new group and name it shaded relief . Then add the three layers to the group. 5. Style your shaded relief In Q, use layer order, transparency, and Symbology>blended mode to create a shaded relief map that helps you interpret the terrain.","title":"Shaded relief"},{"location":"elevation/shadedRelief/#purpose","text":"The shadedRelief tool produces three layers that can be combined to make shaded relief maps.","title":"Purpose"},{"location":"elevation/shadedRelief/#1-replicate-script","text":"Atom>File>New File \u2018shadedRelief.py\u2019 into project folder. Copy script from methods repo . Paste script into \u2018shadedRelief.py\u2019. Save file.","title":"1. Replicate script"},{"location":"elevation/shadedRelief/#2-organize-workspace","text":"Make a \u2018data\u2019 directory within your \u2018wbt_pySpace\u2019 directory (if you do not already have one). Copy the path to \u2018data\u2019 folder so you can set it as the working directory. wbt . work_dir = \"/Users/jhowarth/projects/GEOG0310/methods/wbt_pySpace/data\" Also check the name for your DEM (it may not be the same as below). dem = \"../testDEM/_02_testLidar.tif\"","title":"2. Organize workspace"},{"location":"elevation/shadedRelief/#3-run-script","text":"In Atom, packages>script>run script. (Short cut: Command-I on Mac or Control-I on Windows).","title":"3. Run  script"},{"location":"elevation/shadedRelief/#4-inspect-result","text":"In Q, create a new group and name it shaded relief . Then add the three layers to the group.","title":"4. Inspect result"},{"location":"elevation/shadedRelief/#5-style-your-shaded-relief","text":"In Q, use layer order, transparency, and Symbology>blended mode to create a shaded relief map that helps you interpret the terrain.","title":"5. Style your shaded relief"},{"location":"elevation/slopeClass/","text":"Purpose The slopeClass tool produces a layer that distinguishes six categories of slope from nearly level to very steep. Background The slope classification system is based on the USDA Natural Resources Conservation Service (see Table 2-3). The table below defines classes based on lower limits for simple slopes. Slope units are percent. Class From To Nearly level 0 <1 Gently sloping 1 <4 Strongly sloping 4 <10 Moderately steep 10 <20 Steep 20 <45 Very steep 45 >45 1. Replicate script Atom>File>New File \u2018shadedRelief.py\u2019 into project folder. Copy script from methods repo . Paste script into \u2018shadedRelief.py\u2019. Save file. 2. Organize workspace Make a \u2018data\u2019 directory within your \u2018wbt_pySpace\u2019 directory (if you do not already have one). Copy the path to \u2018data\u2019 folder so you can set it as the working directory. wbt . work_dir = \"/Users/jhowarth/projects/GEOG0310/methods/wbt_pySpace/data\" Also check the name for your DEM (it may not be the same as below). dem = \"../testDEM/_02_testLidar.tif\" 3. Run script In Atom, packages>script>run script. (Short cut: Command-I on Mac or Control-I on Windows). 4. Inspect result In Q, add the layer and change the symbology to a red ramp. It should look like picture below.","title":"Slope class"},{"location":"elevation/slopeClass/#purpose","text":"The slopeClass tool produces a layer that distinguishes six categories of slope from nearly level to very steep.","title":"Purpose"},{"location":"elevation/slopeClass/#background","text":"The slope classification system is based on the USDA Natural Resources Conservation Service (see Table 2-3). The table below defines classes based on lower limits for simple slopes. Slope units are percent. Class From To Nearly level 0 <1 Gently sloping 1 <4 Strongly sloping 4 <10 Moderately steep 10 <20 Steep 20 <45 Very steep 45 >45","title":"Background"},{"location":"elevation/slopeClass/#1-replicate-script","text":"Atom>File>New File \u2018shadedRelief.py\u2019 into project folder. Copy script from methods repo . Paste script into \u2018shadedRelief.py\u2019. Save file.","title":"1. Replicate script"},{"location":"elevation/slopeClass/#2-organize-workspace","text":"Make a \u2018data\u2019 directory within your \u2018wbt_pySpace\u2019 directory (if you do not already have one). Copy the path to \u2018data\u2019 folder so you can set it as the working directory. wbt . work_dir = \"/Users/jhowarth/projects/GEOG0310/methods/wbt_pySpace/data\" Also check the name for your DEM (it may not be the same as below). dem = \"../testDEM/_02_testLidar.tif\"","title":"2. Organize workspace"},{"location":"elevation/slopeClass/#3-run-script","text":"In Atom, packages>script>run script. (Short cut: Command-I on Mac or Control-I on Windows).","title":"3. Run  script"},{"location":"elevation/slopeClass/#4-inspect-result","text":"In Q, add the layer and change the symbology to a red ramp. It should look like picture below.","title":"4. Inspect result"},{"location":"soils/hydric/","text":"Hydric soils are form under wet conditions during the growing season so that the upper part develops anaerobic conditions. They help identify potential wetlands, including in areas currently used for agriculture. Schema Code Description Y At least one component of the major components in the map unit is a hydric soil. N None of the major components in the map unit is a hydric soil. U All of the major components are miscellaneous land types and the map unit is unranked W Water Display This is a largely a binary classification, so I used a complementary palette. Practice Try to symbolize the layer like the picture below.","title":"Hydric soils"},{"location":"soils/hydric/#schema","text":"Code Description Y At least one component of the major components in the map unit is a hydric soil. N None of the major components in the map unit is a hydric soil. U All of the major components are miscellaneous land types and the map unit is unranked W Water","title":"Schema"},{"location":"soils/hydric/#display","text":"This is a largely a binary classification, so I used a complementary palette.","title":"Display"},{"location":"soils/hydric/#practice","text":"Try to symbolize the layer like the picture below.","title":"Practice"},{"location":"soils/natCom/","text":"WORK IN PROGRESS Below, I\u2019ve largely pasted the log that I kept while I processed the data. I have not yet finished revising this to make it more reader friendly. You can see an example of the dataset in this draft of a conservation atlas for Addison County. Introduction This dataset uses geographic information from a soil survey to create a map of potential natural communities. In 2005, Thomas Villars, a Soil Resource Specialist for the USDA Natural Resources Conservation Service, working with Elizabeth H. Thompson and Eric R. Sorenson, authors of Wetland, Woodland, Wildland \u2013 A Guide to the Natural Communities of Vermont , wrote a report and developed a table that associates natural communities to soil series. Schema plan This is the goal, the dataset I\u2019m trying to make, showing the schema. Table Purpose nc Natural community descriptions indexed by page ncf Natural community formations indexed by page nct Natural community types indexed by page add_ss Soil series for Addison County add_sf Soil features for Addison County Hierarchy for natural communities Type Formation Community Hierarchy for soils Soil series Soil features Links between natural communities and soils 1:many community links to features Check key codes for communities Villars lists the page number for each community. I\u2019d like to use these as the keys for the communities, but the problem is that he lists variants for some communities and these variants have short descriptions so in a few cases the page numbers are not unique. For Addison County, there are three conflicts: 134 repeated twice 148 repeated twice 251 repeated twice I\u2019d like the page data types to remain integer, so it seems like the easiest solution is to add a digit to the repeaters. (For example, 1341 and 1342). I\u2019d then have to update the table that lists nat communities for each soil, which would be a bit of a hassle, but hopefully just a find and replace edit. Ah- here\u2019s the glitch with that. I have the right function set up to grab 3 characters, so I\u2019d like the change to remain three digits. Since the descriptions start on page 82, I should be able to create new codes that are less than 100. Like this: 134a : 034 134b : 134 148a : 048 148b : 148 251a : 051 251b : 251 The cuts down on the number of find and replace steps I need to do too. Clean up keys for Addison Soils and Villars table The main challenge here is that Villars names communities for each soil series, but the Addison survey lists a couple of series as complexes that combine two series. Here are the composites in the soil survey: Berkshire-Marlow Calais-Glover Covington-Panton Farmington-Nellis Lyman-Berkshire Nassau-Dutchess I can think of the following solutions: Split the feature into two overlapping polygons Conflate the attributes into a single row I\u2019d rather not duplicate the polygons because this would complicate area estimations. So let\u2019s think through the aggregation. Berkshire-Marlow soil_series nc1 nc2 nc3 nc4 nc5 nc 6 Berkshire 132 142 034 Marlow 132 034 Berkshire-Marlow 132 142 034 This seems reasonable. Marlow is a subset of Berkshire. Calais-Glover soil_series nc1 nc2 nc3 nc4 nc5 nc 6 Calais 132 138 134 Glover 132 142 169 138 Calais-Glover 132 138 142 134 169 This solution just alternates the list following the first one that they have in common. It at least lists all potential communities. All the communities are of the same formation, except for 169. Covington-Panton soil_series nc1 nc2 nc3 nc4 nc5 nc 6 Covington 175 Panton 175 174 Covington-Panton 175 174 In this solution, the first community is shared and the second community is inherited from the Panton soil. Farmington-Nellis soil_series nc1 nc2 nc3 nc4 nc5 nc 6 Farmington 171 172 160 139 Nellis 171 138 134 Farmington-Nellis 171 172 138 160 134 139 This solution follows the alternating pattern. The main concern here is that the communities span more than one formation. At least they both share a common first community in the same formation. These soils both formed in glacial till in the valley. Lyman-Berkshire soil_series nc1 nc2 nc3 nc4 nc5 nc 6 Lyman 048 132 142 Berkshire 132 142 034 Lyman-Berkshire 148 132 142 034 Since the hyphenation is not alphabetical, I assume it represents dominance. So I start with the Lyman nat community. They share two communities. The last community is unique to Berkshire, but it is a variant of something they have in common. All communities are of the same formation. Nassau-Dutchess soil_series nc1 nc2 nc3 nc4 nc5 nc 6 Nassau 163 171 Dutchess 171 142 Nassau-Dutchess 163 171 142 Again, not alphabetical so I assume ordinal dominance. They share one community. Note that the second community for Dutchess is a different formation. Non-soil types in NRCS survey The soil survey describes a handful of features that do not map directly to Villars table. Solution: repeat the soil description as the nat_com1 description and then link to a formation code to generalize with other features. For Muck, type is Forested Wetland (244). For Marsh, type is Open or Shrub Wetlands (309). For others, type codes are new and identify Hydrological features, Undescribed rocky lands, Mining lands. cpage community fpage nat_form type tpage skey 510 Muck and Peat 500 Swamp 244 Forested Wetlands Muck 610 Fresh water marsh 600 Marsh 309 Open or Shrub Wetlands Fresh 710 Cobbly allivial land 700 Hydrology 700 Hydrological Features Cobbly 720 Water 700 Hydrology 700 Hydrological Features Water 810 Rock land 800 Rocky lands 800 Undescribed rocky lands Rock 820 Rubble land 800 Rocky lands 800 Undescribed rocky lands Rubble 910 Gravel pits 900 Mine 900 Mining Lands Gravel 920 Quarry 900 Mine 900 Mining lands Quarry Create community codes that link to formations Villars describes a number of community variants that are described in the chapters but not listed in the table of contents. So I took his table and did the following: 1. Copied all natural community columns (1-6) into a single column and removed duplicates. This gave me a list of each community in his table. 2. Copied the right three characters into a new column (cpage). He had the page number in his community description. This new column will be the primary key of the table. 3. Stripped the page numbers from the community descriptions. I did this by taking the left of length defined by the length of the string minus the length of the page number (5). 4. Add the form codes from the Table of Contents. Create schema and tables in postgres Created new schema in the vt_conservation database. CREATE SCHEMA nat_com AUTHORIZATION postgres ; Created tables. CREATE TABLE nat_com . ctype ( tpage INT PRIMARY KEY , type VARCHAR ( 30 ) UNIQUE NOT NULL ); CREATE TABLE nat_com . cform ( fpage INT PRIMARY KEY , formation VARCHAR ( 40 ) UNIQUE NOT NULL , tpage INT NOT NULL , FOREIGN KEY ( tpage ) REFERENCES nat_com . ctype ( tpage ) ); CREATE TABLE nat_com . com ( cpage SMALLINT PRIMARY KEY , community VARCHAR ( 60 ), fpage SMALLINT NOT NULL , FOREIGN KEY ( fpage ) REFERENCES nat_com . cform ( fpage ) ); CREATE TABLE nat_com . soil_com ( ss_id VARCHAR ( 20 ) PRIMARY KEY , nc1 INT , nc2 INT , nc3 INT , nc4 INT , nc5 INT , nc6 INT , FOREIGN KEY ( nc1 ) REFERENCES nat_com . com ( cpage ), FOREIGN KEY ( nc2 ) REFERENCES nat_com . com ( cpage ), FOREIGN KEY ( nc3 ) REFERENCES nat_com . com ( cpage ), FOREIGN KEY ( nc4 ) REFERENCES nat_com . com ( cpage ), FOREIGN KEY ( nc5 ) REFERENCES nat_com . com ( cpage ), FOREIGN KEY ( nc6 ) REFERENCES nat_com . com ( cpage ) ); CREATE TABLE nat_com . soil_series ( mukey CHAR ( 6 ) PRIMARY KEY , ss_id VARCHAR ( 20 ), s_name VARCHAR ( 40 ), landform VARCHAR ( 60 ), FOREIGN KEY ( ss_id ) REFERENCES nat_com . soil_com ( ss_id ) ); Add foreign key constraint .... ALTER TABLE nat_com . addison_soils ADD CONSTRAINT mukey_fkey FOREIGN KEY ( mukey ) REFERENCES nat_com . soil_series ( mukey ) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION ; CREATE INDEX fki_mukey_fkey ON nat_com . addison_soils ( mukey ); Importing the data took a little effort. When I created the constraints through SQL prior to importing the data, if there was an error, the data simply wouldn\u2019t load and the error message was not specific enough to help troubleshoot. When I loaded the data into a table schema that lacked constraints and then tried to add constraints through the pgAdmin app, I found that the error messages were much more specific about the source of the error. So unfortunately, I lost a lot of time yesterday to just getting the data into the database. Query for map layer The main trick here was that I needed LEFT JOINS for the natural community tables so that they would display even when blank. (Basically, I need the union rather than the intersection). If I used INNER JOINS, I would only retrieve records that had all of the natural community levels that I listed. SELECT a . id , a . geom , b . s_name , e . formation , d . community AS nc1 , f . community AS nc2 , g . community AS nc3 , h . community AS nc4 FROM nat_com . addison_soils AS a INNER JOIN nat_com . soil_series AS b ON a . mukey = b . mukey INNER JOIN nat_com . soil_com AS c ON b . ss_id = c . ss_id LEFT JOIN nat_com . com AS d ON c . nc1 = d . cpage LEFT JOIN nat_com . cform AS e ON d . fpage = e . fpage LEFT JOIN nat_com . com as f ON c . nc2 = f . cpage LEFT JOIN nat_com . com as g ON c . nc3 = g . cpage LEFT JOIN nat_com . com as h ON c . nc4 = h . cpage ; ALTER TABLE nat_com . test ADD CONSTRAINT test_pkey PRIMARY KEY ( id ); Distinguish Clayplain from Oak-Pine-NH Forest Formation I\u2019d like this change to be simple and easily apply to the entire database. I think the easiest way to do it is to add \u201cClayplain Forest\u201d as a separate Formation and then add \u201cForested wetland-upland matrix\u201d as a new type. So I think this involves the following sequence: Update type table so that it includes the new type \u201cForested wetland-upland matrix\u201d. Update form table so that it includes the new form \u201cClayplain Forest\u201d with the new type foreign key. Update com table so that the Valley Clayplain and Wet Valley Clayplain records have the Clayplain Forest foreign key. INSERT INTO nat_com . ctype ( tpage , type ) VALUES ( 400 , 'Forested Wetland-Upland Matrix' ); INSERT INTO nat_com . cform ( fpage , formation , tpage ) VALUES ( 400 , 'Clayplain Forests' , 400 ); UPDATE nat_com . com SET fpage = 400 , WHERE cpage = 174 OR cpage = 175 ; So now I\u2019ll just repeat the TABLE query to kick out a layer for QGIS. CREATE TABLE nat_com . nc_test AS SELECT a . id , a . geom , b . s_name , e . formation , d . community AS nc1 , f . community AS nc2 , g . community AS nc3 , h . community AS nc4 FROM nat_com . addison_soils AS a INNER JOIN nat_com . soil_series AS b ON a . mukey = b . mukey INNER JOIN nat_com . soil_com AS c ON b . ss_id = c . ss_id LEFT JOIN nat_com . com AS d ON c . nc1 = d . cpage LEFT JOIN nat_com . cform AS e ON d . fpage = e . fpage LEFT JOIN nat_com . com as f ON c . nc2 = f . cpage LEFT JOIN nat_com . com as g ON c . nc3 = g . cpage LEFT JOIN nat_com . com as h ON c . nc4 = h . cpage ; ALTER TABLE nat_com . nc_test ADD CONSTRAINT nc_test_pkey PRIMARY KEY ( id ); 2.22 revision: Split Clayplain into Valley Clayplain (84 - Upland Forest) and Wet Valley Clayplain as (244 - Wetland Forest) CREATE TABLE nat_com . nc_test2 AS SELECT a . id , a . geom , b . s_name , e . formation , i . type , d . community AS nc1 , f . community AS nc2 , g . community AS nc3 , h . community AS nc4 FROM nat_com . addison_soils AS a INNER JOIN nat_com . soil_series AS b ON a . mukey = b . mukey INNER JOIN nat_com . soil_com AS c ON b . ss_id = c . ss_id LEFT JOIN nat_com . com AS d ON c . nc1 = d . cpage LEFT JOIN nat_com . cform AS e ON d . fpage = e . fpage LEFT JOIN nat_com . ctype AS i ON e . tpage = i . tpage LEFT JOIN nat_com . com as f ON c . nc2 = f . cpage LEFT JOIN nat_com . com as g ON c . nc3 = g . cpage LEFT JOIN nat_com . com as h ON c . nc4 = h . cpage ; ALTER TABLE nat_com . nc_test2 ADD CONSTRAINT nc_test2_pkey PRIMARY KEY ( id );","title":"Natural communities"},{"location":"soils/natCom/#introduction","text":"This dataset uses geographic information from a soil survey to create a map of potential natural communities. In 2005, Thomas Villars, a Soil Resource Specialist for the USDA Natural Resources Conservation Service, working with Elizabeth H. Thompson and Eric R. Sorenson, authors of Wetland, Woodland, Wildland \u2013 A Guide to the Natural Communities of Vermont , wrote a report and developed a table that associates natural communities to soil series.","title":"Introduction"},{"location":"soils/natCom/#schema-plan","text":"This is the goal, the dataset I\u2019m trying to make, showing the schema. Table Purpose nc Natural community descriptions indexed by page ncf Natural community formations indexed by page nct Natural community types indexed by page add_ss Soil series for Addison County add_sf Soil features for Addison County Hierarchy for natural communities Type Formation Community Hierarchy for soils Soil series Soil features Links between natural communities and soils 1:many community links to features","title":"Schema plan"},{"location":"soils/natCom/#check-key-codes-for-communities","text":"Villars lists the page number for each community. I\u2019d like to use these as the keys for the communities, but the problem is that he lists variants for some communities and these variants have short descriptions so in a few cases the page numbers are not unique. For Addison County, there are three conflicts: 134 repeated twice 148 repeated twice 251 repeated twice I\u2019d like the page data types to remain integer, so it seems like the easiest solution is to add a digit to the repeaters. (For example, 1341 and 1342). I\u2019d then have to update the table that lists nat communities for each soil, which would be a bit of a hassle, but hopefully just a find and replace edit. Ah- here\u2019s the glitch with that. I have the right function set up to grab 3 characters, so I\u2019d like the change to remain three digits. Since the descriptions start on page 82, I should be able to create new codes that are less than 100. Like this: 134a : 034 134b : 134 148a : 048 148b : 148 251a : 051 251b : 251 The cuts down on the number of find and replace steps I need to do too.","title":"Check key codes for communities"},{"location":"soils/natCom/#clean-up-keys-for-addison-soils-and-villars-table","text":"The main challenge here is that Villars names communities for each soil series, but the Addison survey lists a couple of series as complexes that combine two series. Here are the composites in the soil survey: Berkshire-Marlow Calais-Glover Covington-Panton Farmington-Nellis Lyman-Berkshire Nassau-Dutchess I can think of the following solutions: Split the feature into two overlapping polygons Conflate the attributes into a single row I\u2019d rather not duplicate the polygons because this would complicate area estimations. So let\u2019s think through the aggregation.","title":"Clean up keys for Addison Soils and Villars table"},{"location":"soils/natCom/#non-soil-types-in-nrcs-survey","text":"The soil survey describes a handful of features that do not map directly to Villars table. Solution: repeat the soil description as the nat_com1 description and then link to a formation code to generalize with other features. For Muck, type is Forested Wetland (244). For Marsh, type is Open or Shrub Wetlands (309). For others, type codes are new and identify Hydrological features, Undescribed rocky lands, Mining lands. cpage community fpage nat_form type tpage skey 510 Muck and Peat 500 Swamp 244 Forested Wetlands Muck 610 Fresh water marsh 600 Marsh 309 Open or Shrub Wetlands Fresh 710 Cobbly allivial land 700 Hydrology 700 Hydrological Features Cobbly 720 Water 700 Hydrology 700 Hydrological Features Water 810 Rock land 800 Rocky lands 800 Undescribed rocky lands Rock 820 Rubble land 800 Rocky lands 800 Undescribed rocky lands Rubble 910 Gravel pits 900 Mine 900 Mining Lands Gravel 920 Quarry 900 Mine 900 Mining lands Quarry","title":"Non-soil types in NRCS survey"},{"location":"soils/natCom/#create-community-codes-that-link-to-formations","text":"Villars describes a number of community variants that are described in the chapters but not listed in the table of contents. So I took his table and did the following: 1. Copied all natural community columns (1-6) into a single column and removed duplicates. This gave me a list of each community in his table. 2. Copied the right three characters into a new column (cpage). He had the page number in his community description. This new column will be the primary key of the table. 3. Stripped the page numbers from the community descriptions. I did this by taking the left of length defined by the length of the string minus the length of the page number (5). 4. Add the form codes from the Table of Contents.","title":"Create community codes that link to formations"},{"location":"soils/natCom/#create-schema-and-tables-in-postgres","text":"Created new schema in the vt_conservation database. CREATE SCHEMA nat_com AUTHORIZATION postgres ; Created tables. CREATE TABLE nat_com . ctype ( tpage INT PRIMARY KEY , type VARCHAR ( 30 ) UNIQUE NOT NULL ); CREATE TABLE nat_com . cform ( fpage INT PRIMARY KEY , formation VARCHAR ( 40 ) UNIQUE NOT NULL , tpage INT NOT NULL , FOREIGN KEY ( tpage ) REFERENCES nat_com . ctype ( tpage ) ); CREATE TABLE nat_com . com ( cpage SMALLINT PRIMARY KEY , community VARCHAR ( 60 ), fpage SMALLINT NOT NULL , FOREIGN KEY ( fpage ) REFERENCES nat_com . cform ( fpage ) ); CREATE TABLE nat_com . soil_com ( ss_id VARCHAR ( 20 ) PRIMARY KEY , nc1 INT , nc2 INT , nc3 INT , nc4 INT , nc5 INT , nc6 INT , FOREIGN KEY ( nc1 ) REFERENCES nat_com . com ( cpage ), FOREIGN KEY ( nc2 ) REFERENCES nat_com . com ( cpage ), FOREIGN KEY ( nc3 ) REFERENCES nat_com . com ( cpage ), FOREIGN KEY ( nc4 ) REFERENCES nat_com . com ( cpage ), FOREIGN KEY ( nc5 ) REFERENCES nat_com . com ( cpage ), FOREIGN KEY ( nc6 ) REFERENCES nat_com . com ( cpage ) ); CREATE TABLE nat_com . soil_series ( mukey CHAR ( 6 ) PRIMARY KEY , ss_id VARCHAR ( 20 ), s_name VARCHAR ( 40 ), landform VARCHAR ( 60 ), FOREIGN KEY ( ss_id ) REFERENCES nat_com . soil_com ( ss_id ) ); Add foreign key constraint .... ALTER TABLE nat_com . addison_soils ADD CONSTRAINT mukey_fkey FOREIGN KEY ( mukey ) REFERENCES nat_com . soil_series ( mukey ) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION ; CREATE INDEX fki_mukey_fkey ON nat_com . addison_soils ( mukey ); Importing the data took a little effort. When I created the constraints through SQL prior to importing the data, if there was an error, the data simply wouldn\u2019t load and the error message was not specific enough to help troubleshoot. When I loaded the data into a table schema that lacked constraints and then tried to add constraints through the pgAdmin app, I found that the error messages were much more specific about the source of the error. So unfortunately, I lost a lot of time yesterday to just getting the data into the database.","title":"Create schema and tables in postgres"},{"location":"soils/natCom/#query-for-map-layer","text":"The main trick here was that I needed LEFT JOINS for the natural community tables so that they would display even when blank. (Basically, I need the union rather than the intersection). If I used INNER JOINS, I would only retrieve records that had all of the natural community levels that I listed. SELECT a . id , a . geom , b . s_name , e . formation , d . community AS nc1 , f . community AS nc2 , g . community AS nc3 , h . community AS nc4 FROM nat_com . addison_soils AS a INNER JOIN nat_com . soil_series AS b ON a . mukey = b . mukey INNER JOIN nat_com . soil_com AS c ON b . ss_id = c . ss_id LEFT JOIN nat_com . com AS d ON c . nc1 = d . cpage LEFT JOIN nat_com . cform AS e ON d . fpage = e . fpage LEFT JOIN nat_com . com as f ON c . nc2 = f . cpage LEFT JOIN nat_com . com as g ON c . nc3 = g . cpage LEFT JOIN nat_com . com as h ON c . nc4 = h . cpage ; ALTER TABLE nat_com . test ADD CONSTRAINT test_pkey PRIMARY KEY ( id );","title":"Query for map layer"},{"location":"soils/natCom/#distinguish-clayplain-from-oak-pine-nh-forest-formation","text":"I\u2019d like this change to be simple and easily apply to the entire database. I think the easiest way to do it is to add \u201cClayplain Forest\u201d as a separate Formation and then add \u201cForested wetland-upland matrix\u201d as a new type. So I think this involves the following sequence: Update type table so that it includes the new type \u201cForested wetland-upland matrix\u201d. Update form table so that it includes the new form \u201cClayplain Forest\u201d with the new type foreign key. Update com table so that the Valley Clayplain and Wet Valley Clayplain records have the Clayplain Forest foreign key. INSERT INTO nat_com . ctype ( tpage , type ) VALUES ( 400 , 'Forested Wetland-Upland Matrix' ); INSERT INTO nat_com . cform ( fpage , formation , tpage ) VALUES ( 400 , 'Clayplain Forests' , 400 ); UPDATE nat_com . com SET fpage = 400 , WHERE cpage = 174 OR cpage = 175 ; So now I\u2019ll just repeat the TABLE query to kick out a layer for QGIS. CREATE TABLE nat_com . nc_test AS SELECT a . id , a . geom , b . s_name , e . formation , d . community AS nc1 , f . community AS nc2 , g . community AS nc3 , h . community AS nc4 FROM nat_com . addison_soils AS a INNER JOIN nat_com . soil_series AS b ON a . mukey = b . mukey INNER JOIN nat_com . soil_com AS c ON b . ss_id = c . ss_id LEFT JOIN nat_com . com AS d ON c . nc1 = d . cpage LEFT JOIN nat_com . cform AS e ON d . fpage = e . fpage LEFT JOIN nat_com . com as f ON c . nc2 = f . cpage LEFT JOIN nat_com . com as g ON c . nc3 = g . cpage LEFT JOIN nat_com . com as h ON c . nc4 = h . cpage ; ALTER TABLE nat_com . nc_test ADD CONSTRAINT nc_test_pkey PRIMARY KEY ( id ); 2.22 revision: Split Clayplain into Valley Clayplain (84 - Upland Forest) and Wet Valley Clayplain as (244 - Wetland Forest) CREATE TABLE nat_com . nc_test2 AS SELECT a . id , a . geom , b . s_name , e . formation , i . type , d . community AS nc1 , f . community AS nc2 , g . community AS nc3 , h . community AS nc4 FROM nat_com . addison_soils AS a INNER JOIN nat_com . soil_series AS b ON a . mukey = b . mukey INNER JOIN nat_com . soil_com AS c ON b . ss_id = c . ss_id LEFT JOIN nat_com . com AS d ON c . nc1 = d . cpage LEFT JOIN nat_com . cform AS e ON d . fpage = e . fpage LEFT JOIN nat_com . ctype AS i ON e . tpage = i . tpage LEFT JOIN nat_com . com as f ON c . nc2 = f . cpage LEFT JOIN nat_com . com as g ON c . nc3 = g . cpage LEFT JOIN nat_com . com as h ON c . nc4 = h . cpage ; ALTER TABLE nat_com . nc_test2 ADD CONSTRAINT nc_test2_pkey PRIMARY KEY ( id );","title":"Distinguish Clayplain from Oak-Pine-NH Forest Formation"},{"location":"soils/prime/","text":"Prime agriculture Criterion 9b of Act 250 concerns Primary Agricultural Soils as defined by the Farmland Classification system for Vermont . Category Description Too steep Too wet Too rocky Freq Flooded Prime Prime farmland: best combination of physical and chemical characteristics for producing food, feed, fiber, forage, and oilseed crops and are also available for these uses. The present land may be cropland, pasture, forestland, or other land uses, but not urban and built-up or water. Prime (b) Prime (f) Statewide Additional Farmland of Statewide Importance: important but with limitations due to slope, erosion, excessive wetness, slop permeability, flood hazard, shallow depth, or low available water capacity. Statewide (a) Statewide (b) Local Additional Farmland of Local Importance: with limitations that can be overcome. Local (b) NPSL Not prime, statewide, or local. Symbology Because the local soil class does not occur in Middlebury, I used the same hue scheme for Prime and Statewide soils based on a split complementary method with Adobe Color Wheel . I then emphasized Prime soils by lowering saturation and value for Statewide soils. To make the palette universal, I used only the red and blue portion of the palette, and did not use the green colors that would have little contrast with the red color for readers with deuteranopia. PRIME PALETTE STATEWIDE PALETTE Practice Try to symbolize a layer like the picture below.","title":"Farmland class"},{"location":"soils/prime/#prime-agriculture","text":"Criterion 9b of Act 250 concerns Primary Agricultural Soils as defined by the Farmland Classification system for Vermont . Category Description Too steep Too wet Too rocky Freq Flooded Prime Prime farmland: best combination of physical and chemical characteristics for producing food, feed, fiber, forage, and oilseed crops and are also available for these uses. The present land may be cropland, pasture, forestland, or other land uses, but not urban and built-up or water. Prime (b) Prime (f) Statewide Additional Farmland of Statewide Importance: important but with limitations due to slope, erosion, excessive wetness, slop permeability, flood hazard, shallow depth, or low available water capacity. Statewide (a) Statewide (b) Local Additional Farmland of Local Importance: with limitations that can be overcome. Local (b) NPSL Not prime, statewide, or local.","title":"Prime agriculture"},{"location":"soils/prime/#symbology","text":"Because the local soil class does not occur in Middlebury, I used the same hue scheme for Prime and Statewide soils based on a split complementary method with Adobe Color Wheel . I then emphasized Prime soils by lowering saturation and value for Statewide soils. To make the palette universal, I used only the red and blue portion of the palette, and did not use the green colors that would have little contrast with the red color for readers with deuteranopia. PRIME PALETTE STATEWIDE PALETTE","title":"Symbology"},{"location":"soils/prime/#practice","text":"Try to symbolize a layer like the picture below.","title":"Practice"},{"location":"soils/survey/","text":"Dataset In 1971, the Soil Conservation Service of the US Department of Agriculture published a soil survey of Addison County . You can access the dataset as a shapefile in this Soils repository . The folder \u201cAddisonSoils/\u201d contains a shapefile called \u201cGeologic_SO01_poly\u201d with four extensions ( .shp, .shx, .dbf, .prj ). This shapefile was accessed from the USDA Natural Resources Conservation Service Geospatial Data Gateway on Jan 2, 2021. Known problems Based on field work between 1941 and 1964, the Addison County soil survey relies on some of the oldest soil mapping in the state. As a result, surveys conducted later elsewhere in the state describe some soil series that were not yet recognized at the time of the Addison County survey. The purpose of the soil map also produces several issues of description. The soil map was intended to help manage farms and woodlands, select sites for roads, ponds, buildings, and other structures, and evaluate the suitability of land for different land uses, such as agriculture, industry, and recreation. As a result, soils without much value for farming were not described in detail. For example, large swamps are mapped simply as \u2018muck and peat\u2019, while large areas of the Green Mountains are described as \u2018Rock Land.\u2019 Key terms profile : sequence of natural layers, or horizons, from the surface down to the parent material. soil series : soils with similar profile, or with horizons of similar thickness, arrangement, and other important characteristics. soil phase : soils of the same series with a differing quality that affects use of the soil by people, such as texture of the surface, slope, or stoniness. mapping unit : the areas shown on a map (e.g. polygons), often corresponding roughly with soil phase. soil complex : two or more soil series that are too small to distinguish and are instead listed as a compound joined with a hyphen (e.g. Nassau-Dutchess). undifferentiated group : two or more soil series that could be delineated separately but are not necessary to separate for the purposes of the survey. These are listed with the conjunction \u2018and\u2019. land types : soils are so rocky, shallow, or severely eroded that they cannot be classified (e.g. \u201cRock land\u201d). soil associations : a landscape that has distinctive proportional pattern of soils, normally consisting of one or more major soils at at least one minor soil. Top 20 attributes In 2016, the USDA Natural Resources Conservation Service (formerly SCS) updated a TOP20 table that tags map units with attributes for categories commonly used in land analysis. The following fields are contained in the shapefile\u2019s attribute table. Category Classes AGVAL Important Farmland Rating based on \u201cFarmland Classification System for Vermont Soils\u201d FLOOD Flood frequency FORSTGRP Vermont forest land value groups FORSTVAL Relative forest value, based on \u201cSoil Potential Study and Forest Land Value Groups for Vermont Soils\u201d FROSTACTION Potential frost action GRAVEL Potential source of gravel HELCLASS Erosion indexes from Universal Soil Loss Equation HYDRIC Potential that hydric soils are present HYDROGROUP Hydrological group - well-drained to poorly-drained ONSITE Onsite sewage disposal class PARENT General class of parent material PARENTSUB More detailed parent material class PRIME Prime, Statewide, Local, NPSL, Not rated ROCKSHALLOW ROCKDEEP Range in depth to bedrock (inches) SAND Potential for source of sand SLOPELOW SLOPEHIGH Range in slope (percent) WATERSHALLOW WATERDEEP Range in depth to seasonal high water table WATERKIND type of seasonal high water table: apparent or perched KfactWS Dominant condition soil erodibility factor for use in soil loss equations TFACTOR Tolerable soil loss for us in soil loss equations Practice To become familiar with the dataset, try to make a layer like the one pictured below.","title":"Survey data"},{"location":"soils/survey/#dataset","text":"In 1971, the Soil Conservation Service of the US Department of Agriculture published a soil survey of Addison County . You can access the dataset as a shapefile in this Soils repository . The folder \u201cAddisonSoils/\u201d contains a shapefile called \u201cGeologic_SO01_poly\u201d with four extensions ( .shp, .shx, .dbf, .prj ). This shapefile was accessed from the USDA Natural Resources Conservation Service Geospatial Data Gateway on Jan 2, 2021.","title":"Dataset"},{"location":"soils/survey/#known-problems","text":"Based on field work between 1941 and 1964, the Addison County soil survey relies on some of the oldest soil mapping in the state. As a result, surveys conducted later elsewhere in the state describe some soil series that were not yet recognized at the time of the Addison County survey. The purpose of the soil map also produces several issues of description. The soil map was intended to help manage farms and woodlands, select sites for roads, ponds, buildings, and other structures, and evaluate the suitability of land for different land uses, such as agriculture, industry, and recreation. As a result, soils without much value for farming were not described in detail. For example, large swamps are mapped simply as \u2018muck and peat\u2019, while large areas of the Green Mountains are described as \u2018Rock Land.\u2019","title":"Known problems"},{"location":"soils/survey/#key-terms","text":"profile : sequence of natural layers, or horizons, from the surface down to the parent material. soil series : soils with similar profile, or with horizons of similar thickness, arrangement, and other important characteristics. soil phase : soils of the same series with a differing quality that affects use of the soil by people, such as texture of the surface, slope, or stoniness. mapping unit : the areas shown on a map (e.g. polygons), often corresponding roughly with soil phase. soil complex : two or more soil series that are too small to distinguish and are instead listed as a compound joined with a hyphen (e.g. Nassau-Dutchess). undifferentiated group : two or more soil series that could be delineated separately but are not necessary to separate for the purposes of the survey. These are listed with the conjunction \u2018and\u2019. land types : soils are so rocky, shallow, or severely eroded that they cannot be classified (e.g. \u201cRock land\u201d). soil associations : a landscape that has distinctive proportional pattern of soils, normally consisting of one or more major soils at at least one minor soil.","title":"Key terms"},{"location":"soils/survey/#top-20-attributes","text":"In 2016, the USDA Natural Resources Conservation Service (formerly SCS) updated a TOP20 table that tags map units with attributes for categories commonly used in land analysis. The following fields are contained in the shapefile\u2019s attribute table. Category Classes AGVAL Important Farmland Rating based on \u201cFarmland Classification System for Vermont Soils\u201d FLOOD Flood frequency FORSTGRP Vermont forest land value groups FORSTVAL Relative forest value, based on \u201cSoil Potential Study and Forest Land Value Groups for Vermont Soils\u201d FROSTACTION Potential frost action GRAVEL Potential source of gravel HELCLASS Erosion indexes from Universal Soil Loss Equation HYDRIC Potential that hydric soils are present HYDROGROUP Hydrological group - well-drained to poorly-drained ONSITE Onsite sewage disposal class PARENT General class of parent material PARENTSUB More detailed parent material class PRIME Prime, Statewide, Local, NPSL, Not rated ROCKSHALLOW ROCKDEEP Range in depth to bedrock (inches) SAND Potential for source of sand SLOPELOW SLOPEHIGH Range in slope (percent) WATERSHALLOW WATERDEEP Range in depth to seasonal high water table WATERKIND type of seasonal high water table: apparent or perched KfactWS Dominant condition soil erodibility factor for use in soil loss equations TFACTOR Tolerable soil loss for us in soil loss equations","title":"Top 20 attributes"},{"location":"soils/survey/#practice","text":"To become familiar with the dataset, try to make a layer like the one pictured below.","title":"Practice"}]}